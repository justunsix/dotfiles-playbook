# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  
  ############################################################
  # Adapted software install and host file copying ideas from https://github.com/rofrano/lab-vagrant
  # under Apache 2 license https://github.com/rofrano/lab-vagrant/blob/master/LICENSE
  ############################################################

  # This Vagrantfile can be used with VirtualBox or Docker as a provider
  # VirtualBox will be the default. To use Docker type:
  #
  #     vagrant up --provider=docker
  #
  config.vm.box = "debian/bookworm64"
  config.vm.hostname = "debian-dm"

  ############################################################
  # Copy some host files to configure VM like the host
  ############################################################

  # Copy your Starsip config file for prompt
  if File.exists?(File.expand_path("#{ENV['HOME']}/.config/starship.toml"))
    config.vm.provision "file", source: "#{ENV['HOME']}/.config/starship.toml", destination: ".config/starship.toml"
  end

  # Copy your nushell config (uses Windows locations)
  # if nushell directory exists, copy its contents to the VM at ~/.config/nushell
  if File.directory?(File.expand_path("#{ENV['HOME']}/AppData/Roaming/nushell"))
    config.vm.provision "file", source: "#{ENV['HOME']}/AppData/Roaming/nushell", destination: ".config/nushell"
  end

  ############################################################
  # Mount repositories from the host
  ############################################################

  # If exists, mount ~/Code from Host to /home/vagrant/Code in VM
  if File.directory?(File.expand_path("#{ENV['HOME']}/Code"))
    config.vm.synced_folder "#{ENV['HOME']}/Code", "/home/vagrant/Code"
  end

  # Install apt software
  config.vm.provision "shell", inline: <<-SHELL
    # Update and install
    apt-get update
    apt-get install -y make git
    apt-get -y autoremove
  SHELL

  ############################################################
  # Install Ansible and run Ansible playbook for additional VM configuration
  ############################################################

  # Run Ansible from the Vagrant VM
  # https://developer.hashicorp.com/vagrant/docs/provisioning/ansible_local#install-galaxy-roles-in-a-path-owned-by-root
  config.vm.provision "ansible_local" do |ansible|
    ansible.become = true
    ansible.playbook = "playbook.yml"
    ansible.galaxy_role_file = "requirements.yml"
    ansible.galaxy_roles_path = "/etc/ansible/roles"
    ansible.galaxy_command = "sudo ansible-galaxy install --role-file=%{role_file} --roles-path=%{roles_path} --force"
  end
end
