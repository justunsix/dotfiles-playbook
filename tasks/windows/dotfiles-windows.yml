# Windows dotfiles
# All dotfile directories that must exist
- name: dotfiles - Create user software config directories if it does not exist of target user
  ansible.windows.win_file:
    path: "{{ item }}"
    state: directory
  tags: ['dotfiles']
  with_items: "{{ dotfiles_directories }}"

# Remove any dotfiles in different locations if they exist already
# These files might have been automatically generated when a program was run before
# This step prevent extra dotfiles conflicting with the latest ones set up in this task
- name: dotfiles - Remove any dotfiles in different locations if they exist already
  ansible.windows.win_file:
    path: "{{ item }}"
    state: absent
  tags: ['dotfiles']
  with_items: "{{ dotfiles_to_be_removed }}"

- name: dotfiles - Sync user dotfiles, scripts
  ansible.windows.win_copy:
    # src with "/"" only copies files in src directory to dest directory
    # use src without "/" to copy directory itself
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  tags: ['dotfiles']
  loop: "{{ dotfiles_items }}"

- name: dotfiles - Sync Hunspell dictionaries with Libreoffice dictionaries on Windows
  ansible.windows.win_copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: yes
  tags: ['dotfiles']
  loop: "{{ hunspell_dictionaries }}"

- name: dotfiles - add directories to PATH if they do not exist already
  ansible.windows.win_path:
    name: PATH
    elements:
    - C:\Users\{{ target_user }}\usr\bin
    - C:\ProgramData\chocolatey\bin
    - C:\Program Files\Git\bin
    scope: user
    state: present

# Windows environment configuration
- name: "Set target_user environment variables"
  ansible.windows.win_environment:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    #  Set for current Ansible user
    level: user
  loop: "{{ environment_variables }}"
  tags: ['dotfiles', 'emacs']

# Windows mpv specific Windows window location
- name: mpv - Replace geometry line in mpv.conf
  win_lineinfile:
    path: '{{ ansible_env.USERPROFILE }}\scoop\apps\mpv\current\portable_config\mpv.conf'
    backrefs: yes
    regexp: '^geometry=1800x1370\+0\+0'
    # regexp: '^geometry=67%x100%\+0\+0'
    line: 'geometry=67%x98%+0+30'
  tags: ['dotfiles', 'mpv']    

- name: gfold - Replace home directory in gfold.toml with Windows home directory
  win_lineinfile:
    path: '{{ ansible_env.USERPROFILE }}/.config/gfold.toml'
    backrefs: yes
    regexp: '/home/justin'
    line: "{{ ansible_env.USERPROFILE }}"
  tags: ['dotfiles', 'gfold']
