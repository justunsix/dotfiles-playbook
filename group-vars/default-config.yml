# Variables for playbooks

downloads: ~/.ansible-downloads/

# Location of this repository
dotfiles_repo: "git@github.com:justunsix/dotfiles.git"
dotfiles_repo_version: "main"
dotfiles_repo_accept_hostkey: false
dotfiles_repo_local_destination: "~/Code/dotfiles"

dotfiles_home: "~"

dotfiles_directories:
  - "/home/{{ target_user }}/usr/bin"
  - "/home/{{ target_user }}/Templates"
  - "/home/{{ target_user }}/.config/fish"
  - "/home/{{ target_user }}/.config/hunspell"
  - "/home/{{ target_user }}/.local/share/applications"
  - "/home/{{ target_user }}/.config/hunspell"
# - "/home/{{ target_user }}/.config/xmonad"
# - "/home/{{ target_user }}/.config/xmobar"
  - "/home/{{ target_user }}/.config/cool-retro-term"
  - "/home/{{ target_user }}/.config/i3"
  - "/home/{{ target_user }}/.config/i3status"
  - "/home/{{ target_user }}/.config/rofi"
  - "/home/{{ target_user }}/.config/copyq"
  - "/home/{{ target_user }}/.config/dunst"
  - "/home/{{ target_user }}/.config/todotxt-cli"
  - "/home/{{ target_user }}/.config/todotxt-cli/.todo.actions.d"
  - "/home/{{ target_user }}/.config/fontconfig/conf.d"

dotfiles_files:
  - .bashrc
  - .bash_aliases
  - .bash_profile
  - .gitconfig
  - .inputrc
  - Templates/New-Text-Document.txt
  - .local/share/applications/firefox-flatpak.desktop
  - .local/share/applications/fluent-reader.desktop
  - .local/share/applications/vlc-playlist.desktop
  - .local/share/applications/clipboard-html-to-org.desktop
  - .local/share/applications/screenshot-ocr.desktop
  - usr/bin/jt-gc.sh
  - usr/bin/jt-gs.sh
  - usr/bin/jt-gt.sh
  - usr/bin/jt-update-all.sh
  - usr/bin/jt-ocr-to-clipboard.sh
  - usr/bin/jt-post-i3.sh
  - usr/bin/jt-clip-html-to-org.sh
# Manage VS Code Settings manually due to possible sensitive settings
#  - .config/Code/User/settings.json  
  - .config/Code/User/settings.json
  - .config/cool-retro-term/cool-retro-term-my-futuristic.json
  - .config/copyq/copyq.conf
  - .config/copyq/copyq-commands.ini
  - .config/dunst/dunstrc
  - .config/emacs/init.el
  - .config/emacs/setup/extras.el
  - .config/emacs/setup/minimal.el
  - .config/emacs/setup/other.el
  - .config/emacs/setup/variables.el
  - .config/fish/config.fish
  - .config/fontconfig/conf.d/10-nixpkg-fonts.conf
  - .config/i3/config
  - .config/i3status/config
  - .config/mpv/input.conf
  - .config/mpv/mpv.conf
  - .config/mpv/scripts/autoload.lua
  - .config/mpv/script-opts/osc.conf
  - .config/rofi/config.rasi
  - .config/todotxt-cli/todo.cfg
  - .config/todotxt-cli/todo-work.cfg
  - .config/todotxt-cli/.todo.actions.d/edit
  - .config/todotxt-cli/.todo.actions.d/pn
  - .config/kdeglobals
  - .config/starship.toml

dotfiles_files_binaries:
  - usr/bin/jt-gc.sh
  - usr/bin/jt-gs.sh
  - usr/bin/jt-gt.sh
  - usr/bin/jt-update-all.sh
  - usr/bin/jt-ocr-to-clipboard.sh
  - usr/bin/jt-post-i3.sh
  - usr/bin/jt-clip-html-to-org.sh
  - .config/todotxt-cli/.todo.actions.d/edit
  - .config/todotxt-cli/.todo.actions.d/pn

# Optional location of dotfile overlay to override or add to existing dotfiles in this repository
dotfiles_overlay_dir: "{{ playbook_dir }}/../dotfiles-overlay"

# Whether to configure certain build items
configure_dotfiles: true
configure_emacs: true
configure_devops_b: true
configure_extras: false
configure_repos: true
configure_mpv: false
configure_gnome: true

# Dotfiles under management of this repository
# dotfiles_files:
#  - .bashrc

# User for which set up is being done for
# Override with your user name
target_user: user

# Personal Repositories to be cloned, synchronized
git_repositories:
  # Value of dotfiles_repo variable
  - "{{ dotfiles_repo }}"

# Other people's Git Repositories to be cloned, synchronized
git_repositories_external:
  - git@github.com:junegunn/fzf.git
  - git@github.com:todotxt/todo.txt-cli.git
  - git@github.com:Zren/mpv-osc-tethys.git

git_repositories_haskell:
  - git@github.com:xmonad/xmonad.git
  - git@github.com:xmonad/xmonad-contrib.git

apt_ppa_repositories:
  # - ppa:christian-boxdoerfer/fsearch-stable
  # - ppa:thopiekar/openrgb
  - ppa:kelleyk/emacs
  - ppa:fish-shell/release-3

apt_installed_packages:
  # Package Management
  - aptitude
  - flatpak
  - curl
  ## Fonts, Codes
  - ubuntu-restricted-extras
  ### Emacs
  - fonts-cantarell
  - fonts-jetbrains-mono
  ### Starship prompt nerd font
  - fonts-firacode
  ## Shell support
  - fish
  - rename
  - bat
  - fzf
  ## Screenshot
  - flameshot
  ## File Management
  - dolphin
  - qt5ct
  - adwaita-qt
  - konsole
  ### Android Phone Connectivity
  ### Requires restart to work
  - gmtp
  # fsearch
  ## File Synchronization
  - git-all
  - stow
  ## Email
  - evolution-ews
  ## Office
  - libreoffice
  ## Optical Character Recognition (OCR)
  - tesseract-ocr
  - tesseract-ocr-eng
  - tesseract-ocr-fra
  - tesseract-ocr-chi-sim
  - tesseract-ocr-chi-tra
  - gimagereader
  ## Key Bindings
  - input-remapper
  ## User Interface
  - gnome-shell-extension-manager
  - gnome-tweaks
  ## Security
  - resolvconf
  ### Anti-virus
  - clamav
  - clamav-daemon
  #### RAR scanning support for ClamAV
  - libclamunrar9
  ## System
  - htop
  - bleachbit
  ### Windows Management i3
  - i3
  - dmenu
  - rofi
  - lxappearance
  - copyq
  - redshift
  ### System - Language
  - language-pack-gnome-en
  - language-pack-gnome-fr
  ## Media, Sound, Video
  - pavucontrol
  - gimp
  ## DevOps Editors
  - vim
  ### Emacs
  - emacs28-nativecomp
  - hunspell
  - hunspell-en-gb
  - hunspell-fr
  - ripgrep
  ## DevOps Languages
  - python3
  - python3-pip
  - python3-virtualenv
  - nodejs
  - npm
  ### Rust
  #### pkg-config required for cargo-update
  - pkg-config
  ### Haskell - GHCup Dependencies
  ### Install GHCup manually
  - build-essential
  - libffi-dev
  - libffi8ubuntu1
  - libgmp-dev
  - libgmp10
  - libncurses-dev
  - libncurses5
  - libtinfo5
  ## DevOps Support
  ### Document conversion, Emacs exports
  - pandoc
  #### Latex
  - texlive-latex-base
  - texlive-latex-extra
  #### PlantUML
  - plantuml
  ### DevOps Infrastructure
  ### - Ansible installed with pip
  ## Media
  - mpv

apt_installed_packages_devops:
  - default-jdk
  - maven
  - gradle
  - docker
  - docker-compose
  - awscli

apt_ppa_repositories_extras:
  - ppa:yt-dlp/unstable

apt_installed_packages_extras:
  ## yt-dlp
  - ffmpeg
  ## Downloaders
  ### Downloader
  - aria2
  ### Download GUI, can use aria2
  # - uget

pip_installed_packages_extras:
  ## yt-dlp
  - yt-dlp
  ### Recommended - Certificates - Mozilla root certificate bundle
  - certifi
  ### Recommended - Encoding
  - brotli
  ### yt-dlp - Other Possible Dependencies
  #### Downloads over websocket
  - websockets
  #### Audio metadata
  - mutagen
  #### File extended attributes on Linux, MacOS
  - xattr
  #### AES-128 and similar streams
  - pycryptodomex

rust_installed_packages:
  - exa
  - du-dust
  - procs
  - bottom
  - zoxide
  - broot
  - monolith
  - topgrade
  - sd
  - cargo-update
  # - alacritty install on Ubuntu using snap

deb_get_installed_packages:
  ## Devops Editors
  - code
  # Office, Diagramming
  - draw.io
  # Hardware
  - openrgb
  ## File Management
  ### Peazip will use KDE modules and get them
  - peazip
  - fsearch
  ## Web
  # - google-chrome-stable / requires manual acceptance EULA
  - microsoft-edge-stable
  ## Games
  # - lutris / requires manual install due to old PPA
  ## Security
  - nordvpn
  - keepassxc

deb_get_installed_packages_devops:
  - minikube
  - terraform

apt_removed_packages:
  - emacs-common
  - emacs
  - thunderbird

snap_installed_packages:
  ## Web
  - firefox
  ## Shell
  - starship
  # Media, Sound, Video
  - vlc

snap_installed_packages_classic:
  - alacritty

snap_installed_packages_devops:
  - kubectl
  - pycharm-community

flatpak_installed_packages:
  # Web
  - org.mozilla.firefox
  - com.github.tchx84.Flatseal
  # Media
  ## Bino (3d, VR player) (Optional)
  ## - org.bino3d.bino

nix_installed_packages:
  - nixpkgs.iosevka
  - nixpkgs.source-code-pro
  # even though installed by apt, require for program like exa
  - nixpkgs.fira-code
