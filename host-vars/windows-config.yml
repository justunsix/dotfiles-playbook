# Basic authentication
# Change to same name as Windows user
ansible_user: justi
# Using ask-pass
# ansible_password: Password
ansible_connection: winrm
ansible_winrm_transport: basic
# Use HTTPS port, by default Ansible will use https connection scheme
ansible_winrm_scheme: https
ansible_port: 5986

# Ignore self-signed certificate warnings
ansible_winrm_server_cert_validation: ignore

dotfiles_repo_local_destination: "~/Code/dotfiles"
# Optional location of dotfile overlay to override or add to existing dotfiles in this repository
dotfiles_overlay_dir: "{{ playbook_dir }}/../dotfiles-overlay"

target_user: user

chocolatey_installed_packages:
  ## Package Management
  - chocolatey
  ### Manage terminal using Windows store/winget instead
  ###- microsoft-windows-terminal
  # Security
  - veracrypt

chocolatey_installed_packages_extras:
  ## Games
  - steam
  - ubisoft-connect

scoop_installed_packages:
  ## System
  - btop
  - espanso
  ### git including bash
  - git
  ## Package Management
  - topgrade
  ## File Management
  - git-credential-manager
  - lazygit
  - bleachbit
  - fzf
  - uutils-coreutils
  - eza
  - less
  - bat
  ### fd optional for Emacs and nvim frameworks
  - fd
  ### rg optional for Emacs and nvim frameworks
  - ripgrep
  - duf
  - everything
  - kondo
  - broot
  ## To differentiate from dolphin emulator
  - extras/dolphin
  ### yazi file manager and supporting programs
  - yazi
  #### yazi optional dependencies
  - unar
  - jq
  - poppler
  ## Web
  - firefox
  ## Fonts
  ### For general, emacs use
  - nerd-fonts/JetBrains-Mono
  ### Patched for alacritty
  - nerd-fonts/JetBrainsMono-NF-Mono
  ## OCR
  - capture2text
  ## Shell / Terminal
  - pwsh
  - zoxide
  - gsudo
  - mprocs
  - wezterm
  - carapace-bin
  - nu
  ### protobuf required for cargo binstall atuin
  - protobuf
  ### Prompt
  - starship
  ## Office, Productivity
  - libreoffice
  - peazip
  - plantuml
  ### graphiz is needed by plantuml for diagram generation
  - graphviz
  - draw.io
  - anki
  - okular
  - autohotkey
  ## Media
  - krita
  - vlc
  - mpv
  ## Security
  - gpg4win
  - keepassxc
  ## DevOps
  - helix
  - nodejs
  ### Languages
  - make
  #### Python
  ##### Required for Ansible management
  - python
  #### sh, required by Emacs
  - shfmt
  ##### Virtual environments
  # - miniconda3
  # Replace pipx with uv
  # - pipx
  ##### Python package, project, tool manager
  - uv
  #### VS Code Polyglot literate programming
  - dotnet-sdk
  ### Emacs and Supporting Programs
  - emacs
  - pandoc
  - aspell
  #### Emacs Doom Framework
  - llvm
  #### For use with Emacs diff, grep
  - diffutils
  - grep
  - gzip
  #### Shellcheck used by Emacs Flymake for shell scripts by default - Emacs 29.1
  - shellcheck
  #### Used by org-download for clipboard pasting to org
  - imagemagick
  ### Neovim and Supporting Programs
  - neovim
  #### for telescope fzf native
  - cmake
  #### nvim-treesitter
  - tree-sitter
  #### For Neovim and Emacs org-roam SQLite
  - gcc

scoop_installed_packages_extras:
  ## Communications
  - discord

dotfiles_directories:
  - "{{ ansible_env.USERPROFILE }}/.config"
  - "{{ ansible_env.USERPROFILE }}/usr/bin"
  - "{{ ansible_env.USERPROFILE }}/AppData/Local/nvim"
  - "{{ ansible_env.USERPROFILE }}/AppData/Roaming/topgrade"
  - "{{ ansible_env.USERPROFILE }}/AppData/Roaming/espanso"
  - "{{ ansible_env.USERPROFILE }}/.config/emacs"
  - "{{ ansible_env.USERPROFILE }}/.config/doom"
  - "{{ ansible_env.USERPROFILE }}/.config/wezterm"
  - "{{ ansible_env.USERPROFILE }}/.config/todotxt-cli"
  - "{{ ansible_env.USERPROFILE }}/.config/fish"
  - "{{ ansible_env.USERPROFILE }}/AppData/Roaming/helix"
  - "{{ ansible_env.USERPROFILE }}/AppData/Roaming/dystroy/broot/config"
  - "{{ ansible_env.USERPROFILE }}/AppData/Roaming/navi"

dotfiles_to_be_removed:
  - "{{ ansible_env.USERPROFILE }}/AppData/Local/topgrade.toml"
  - "{{ ansible_env.USERPROFILE }}/.emacs"
  - "{{ ansible_env.USERPROFILE }}/.emacs.d"
  - "{{ ansible_env.USERPROFILE }}/.emacs.d"
  - "{{ ansible_env.USERPROFILE }}/Documents/PowerShell/profile.ps1"
  - "{{ ansible_env.USERPROFILE }}/Documents/WindowsPowerShell/profile.ps1"

dotfiles_items:
  # Reserve for Doom Emacs install
  # - { src: "{{ dotfiles_repo_local_destination }}/.config/emacs/", dest: "{{ ansible_env.USERPROFILE }}/.config/emacs" }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/doom/",
      dest: "{{ ansible_env.USERPROFILE }}/.config/doom",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/usr/bin-windows/",
      dest: "{{ ansible_env.USERPROFILE }}/usr/bin",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/nvim/",
      dest: "{{ ansible_env.USERPROFILE }}/AppData/Local/nvim",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/mpv/",
      dest: "{{ ansible_env.USERPROFILE }}/scoop/apps/mpv/current/portable_config",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/topgrade/",
      dest: "{{ ansible_env.USERPROFILE }}/AppData/Roaming/topgrade",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/espanso/",
      dest: "{{ ansible_env.USERPROFILE }}/AppData/Roaming/espanso/",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/nushell/",
      dest: "{{ ansible_env.USERPROFILE }}/AppData/Roaming/nushell",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/navi/",
      dest: "{{ ansible_env.USERPROFILE }}/AppData/Roaming/navi",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/starship.toml",
      dest: "{{ ansible_env.USERPROFILE }}/.config/starship.toml",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/gfold.toml",
      dest: "{{ ansible_env.USERPROFILE }}/.config/gfold.toml",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/kdeglobals",
      dest: "{{ ansible_env.USERPROFILE }}/.config/kdeglobals",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/dolphinrc",
      dest: "{{ ansible_env.USERPROFILE }}/.config/dolphinrc",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/vlc/",
      dest: "{{ ansible_env.USERPROFILE }}/scoop/apps/vlc/current/portable_config",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/wezterm/",
      dest: "{{ ansible_env.USERPROFILE }}/.config/wezterm",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/todotxt-cli/",
      dest: "{{ ansible_env.USERPROFILE }}/.config/todotxt-cli",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/fish/",
      dest: "{{ ansible_env.USERPROFILE }}/.config/fish",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/helix/",
      dest: "{{ ansible_env.USERPROFILE }}/AppData/Roaming/helix",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.config/broot/",
      dest: "{{ ansible_env.USERPROFILE }}/AppData/Roaming/dystroy/broot/config",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/.gitconfig",
      dest: "{{ ansible_env.USERPROFILE }}/.gitconfig",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/other/WindowsPowerShell/Microsoft.PowerShell_profile.ps1",
      dest: "{{ ansible_env.USERPROFILE }}/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1",
    }
  - {
      src: "{{ dotfiles_repo_local_destination }}/other/PowerShell/Microsoft.PowerShell_profile.ps1",
      dest: "{{ ansible_env.USERPROFILE }}/Documents/PowerShell/Microsoft.PowerShell_profile.ps1",
    }

environment_variables:
  # Windows Emacs Configuration
  # Assume following are installed by system tasks for Emacs:
  # - Fonts
  # - ripgrep, aspell, pandoc
  # Set home to "C:\Users\justi\"
  - { name: "HOME", value: "{{ ansible_env.USERPROFILE }}" }
  - { name: "EDITOR", value: "nvim" }
